# Generated by Django 5.0.7 on 2024-07-17 12:20

import django.contrib.auth.validators
import django.contrib.postgres.indexes
import django.utils.timezone
import phonenumber_field.modelfields
import pottery.account.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 128 characters or fewer. Letters, digits and @/./+/-/_ only.',
                 max_length=128, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('first_name', models.CharField(max_length=32, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Last name')),
                ('middle_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Middle name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(
                    max_length=128, region=None, unique=True, verbose_name='Phone number')),
                ('is_staff', models.BooleanField(default=False,
                 help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(
                    default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Is active?')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date joined')),
                ('filiations', models.ManyToManyField(related_name='users',
                 to='organization.filiation', verbose_name='Filiations')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'indexes': [django.contrib.postgres.indexes.HashIndex(fields=['phone_number'], name='user__phone_number__hash_index'), django.contrib.postgres.indexes.HashIndex(fields=['first_name'], name='user__first_name__hash_index')],
            },
            managers=[
                ('objects', pottery.account.models.UserManager()),
            ],
        ),
    ]
